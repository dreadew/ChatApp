version: '3.8'

networks:
  chat-net:

services:
  proxy:
    container_name: proxy
    image: nginx:1.24-alpine-slim
    ports:
      - '80:80'
    depends_on:
      - chatapp
    networks:
      - chat-net

  db:
    image: postgres:latest
    container_name: chat_postgres
    environment:
      POSTGRES_DB: ChatDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: chat-password
    ports:
      - '5353:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 2s
      timeout: 5s
      retries: 10

  refi:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - chat-net
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
      interval: 2s
      timeout: 5s
      retries: 10

  chatapp:
    image: chatapp
    build:
      context: .
      dockerfile: src/ChatApp.Api/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - chat-net
    depends_on:
      db:
        condition: service_healthy
      refi:
        condition: service_healthy

volumes:
  postgres_data:
